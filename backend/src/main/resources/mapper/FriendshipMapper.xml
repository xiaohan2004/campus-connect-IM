<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campus.im.mapper.FriendshipMapper">
    
    <resultMap id="BaseResultMap" type="com.campus.im.entity.Friendship">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="friend_id" property="friendId"/>
        <result column="remark" property="remark"/>
        <result column="group_id" property="groupId"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, user_id, friend_id, remark, group_id, status, created_at, updated_at
    </sql>
    
    <insert id="insert" parameterType="com.campus.im.entity.Friendship" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO friendship (user_id, friend_id, remark, group_id, status)
        VALUES (#{userId}, #{friendId}, #{remark}, #{groupId}, #{status})
    </insert>
    
    <update id="update" parameterType="com.campus.im.entity.Friendship">
        UPDATE friendship
        <set>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="groupId != null">
                group_id = #{groupId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </update>
    
    <delete id="delete">
        DELETE FROM friendship
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </delete>
    
    <select id="selectByUserIdAndFriendId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM friendship
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </select>
    
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM friendship
        WHERE user_id = #{userId}
        ORDER BY created_at DESC
    </select>
    
    <select id="selectByUserIdAndGroupId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM friendship
        WHERE user_id = #{userId} AND group_id = #{groupId}
        ORDER BY created_at DESC
    </select>
    
    <update id="updateRemark">
        UPDATE friendship
        SET remark = #{remark}
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </update>
    
    <update id="updateGroup">
        UPDATE friendship
        SET group_id = #{groupId}
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </update>
    
    <update id="updateStatus">
        UPDATE friendship
        SET status = #{status}
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </update>
    
</mapper> 