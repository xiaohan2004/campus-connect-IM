<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campus.im.mapper.FileResourceMapper">
    <resultMap id="BaseResultMap" type="com.campus.im.entity.FileResource">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="file_name" property="fileName"/>
        <result column="file_type" property="fileType"/>
        <result column="file_size" property="fileSize"/>
        <result column="file_url" property="fileUrl"/>
        <result column="thumbnail_url" property="thumbnailUrl"/>
        <result column="duration" property="duration"/>
        <result column="width" property="width"/>
        <result column="height" property="height"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, file_name, file_type, file_size, file_url, thumbnail_url, duration, width, height, status, created_at, updated_at
    </sql>

    <!-- 插入文件资源记录 -->
    <insert id="insert" parameterType="com.campus.im.entity.FileResource" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO file_resource (user_id, file_name, file_type, file_size, file_url, thumbnail_url, duration, width, height, status)
        VALUES (#{userId}, #{fileName}, #{fileType}, #{fileSize}, #{fileUrl}, #{thumbnailUrl}, #{duration}, #{width}, #{height}, #{status})
    </insert>

    <!-- 更新文件资源记录 -->
    <update id="update" parameterType="com.campus.im.entity.FileResource">
        UPDATE file_resource
        <set>
            <if test="fileName != null">file_name = #{fileName},</if>
            <if test="thumbnailUrl != null">thumbnail_url = #{thumbnailUrl},</if>
            <if test="duration != null">duration = #{duration},</if>
            <if test="width != null">width = #{width},</if>
            <if test="height != null">height = #{height},</if>
            <if test="status != null">status = #{status},</if>
            updated_at = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 逻辑删除文件资源记录 -->
    <update id="delete">
        UPDATE file_resource
        SET status = 1, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据ID查询文件资源 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM file_resource
        WHERE id = #{id} AND status = 0
    </select>

    <!-- 根据用户ID查询文件资源 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM file_resource
        WHERE user_id = #{userId} AND status = 0
        ORDER BY created_at DESC
    </select>

    <!-- 根据用户ID和文件类型查询文件资源 -->
    <select id="selectByUserIdAndFileType" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM file_resource
        WHERE user_id = #{userId} AND file_type = #{fileType} AND status = 0
        ORDER BY created_at DESC
    </select>

    <!-- 根据文件URL查询文件资源 -->
    <select id="selectByFileUrl" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM file_resource
        WHERE file_url = #{fileUrl} AND status = 0
        LIMIT 1
    </select>

    <!-- 根据文件资源ID列表批量查询 -->
    <select id="selectByIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM file_resource
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status = 0
    </select>

    <!-- 根据用户ID和时间范围查询文件资源 -->
    <select id="selectByUserIdAndTimeRange" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM file_resource
        WHERE user_id = #{userId}
        AND created_at BETWEEN #{startTime} AND #{endTime}
        AND status = 0
        ORDER BY created_at DESC
    </select>

    <!-- 查询用户上传的文件总大小 -->
    <select id="selectTotalFileSizeByUserId" resultType="java.lang.Long">
        SELECT SUM(file_size)
        FROM file_resource
        WHERE user_id = #{userId} AND status = 0
    </select>

    <!-- 分页查询用户文件资源 -->
    <select id="selectByUserIdWithPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM file_resource
        WHERE user_id = #{userId}
        <if test="fileType != null">
            AND file_type = #{fileType}
        </if>
        AND status = 0
        ORDER BY created_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 计算用户文件资源总数 -->
    <select id="countByUserId" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM file_resource
        WHERE user_id = #{userId}
        <if test="fileType != null">
            AND file_type = #{fileType}
        </if>
        AND status = 0
    </select>
</mapper> 