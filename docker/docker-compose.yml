version: '3.8'

services:
  frontend:
    image: nginx:alpine
    container_name: campus-frontend
    ports:
      - "80:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - campus-network
    restart: unless-stopped

  backend:
    image: openjdk:17-slim
    container_name: campus-backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend/im-0.0.1-SNAPSHOT.jar:/app/app.jar
    working_dir: /app
    command: java -jar app.jar
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - campus-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: campus-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - campus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: campus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - campus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  campus-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: 